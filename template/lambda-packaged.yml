Parameters:
  CLIENTID:
    Type: String
  CLIENTSECRET:
    Type: String
  ENCRYPTIONKEY:
    Type: String
  APPAWSACCESSKEYID:
    Type: String
  APPAWSSECRETACCESSKEY:
    Type: String
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      RoleName: twitter_management_lambda_role
  LambdaTweetFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: twitter-management-lambda
        S3Key: 8ac585e11c4be4b62eddf483e8611e1d
      FunctionName: twitter-management-tweet
      Handler: tweet.tweet
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Runtime: nodejs18.x
      Environment:
        Variables:
          CLIENT_ID:
            Ref: CLIENTID
          CLIENT_SECRET:
            Ref: CLIENTSECRET
          ENCRYPTION_KEY:
            Ref: ENCRYPTIONKEY
          APP_AWS_ACCESS_KEY_ID:
            Ref: APPAWSACCESSKEYID
          APP_AWS_SECRET_ACCESS_KEY:
            Ref: APPAWSSECRETACCESSKEY
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - LambdaTweetFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
